Cumulative Transferable Voting
Copyright (C) 2010-2011, Louis G. "Ted" Stern

The Problem:
--------------
Run an election that gives proportional representation, using range ballots.

Existing competitors:
---------------------
 * Single Transferable Vote uses ranked ballots, and usually uses Droop
   Quota.  This ensures that a majority party will receive a majority of the
   seats, but is not fully representative.

 * Cumulative Vote is semi-representational, but can eliminate candidates on
   the last one or two seats due to vote splitting.  This means that minority
   factions won't be well represented.

 * Reweighted Range Voting:
   Developed by Warren Smith (rangvoting.org), uses a Range Ballot.

I like Cumulative Vote because it gives a total single vote to each voter,
like STV, but uses all of the voter's preferences at every stage, like Range
Voting.  The only problem is loss of representation due to vote splitting or
failure to distribute over-quota votes to other members of a faction.

To solve that problem, I run a series of rounds as in STV.  In each round,
over-quota or eliminated votes for a candidate are transferred to the
remaining non-eliminated and non-seated candidates in proportion to their
current vote totals.

Votes can be read in from a CSV text file.

The first line of the file is the list of candidates.

Subsequent lines are the individual scores.

Scores are assumed to be integers, but are converted to floats internally and
each ballot is normalized to a total score of 1.0.

See ctv.py commments for more info.

How to run the code (currently):

    # Edit end of ctv.py to read in input from the appropriate csv file.

    ./ctv.py

Currently, it is set to process the june2011.csv file, using results from

   http://rangevoting.org/June2011RealWorldRRVvotes.txt

TO DO:

Set up command-line arguments and switches so user can select input file,
alternate between Hare and Droop quotas ('hare' is default) and modify
printout.
